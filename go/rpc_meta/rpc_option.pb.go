// Code generated by protoc-gen-go.
// source: sofa/pbrpc/rpc_option.proto
// DO NOT EDIT!

package meta

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CompressType int32

const (
	CompressType_CompressTypeNone   CompressType = 0
	CompressType_CompressTypeGzip   CompressType = 1
	CompressType_CompressTypeZlib   CompressType = 2
	CompressType_CompressTypeSnappy CompressType = 3
	CompressType_CompressTypeLZ4    CompressType = 4
)

var CompressType_name = map[int32]string{
	0: "CompressTypeNone",
	1: "CompressTypeGzip",
	2: "CompressTypeZlib",
	3: "CompressTypeSnappy",
	4: "CompressTypeLZ4",
}
var CompressType_value = map[string]int32{
	"CompressTypeNone":   0,
	"CompressTypeGzip":   1,
	"CompressTypeZlib":   2,
	"CompressTypeSnappy": 3,
	"CompressTypeLZ4":    4,
}

func (x CompressType) Enum() *CompressType {
	p := new(CompressType)
	*p = x
	return p
}
func (x CompressType) String() string {
	return proto.EnumName(CompressType_name, int32(x))
}
func (x *CompressType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CompressType_value, data, "CompressType")
	if err != nil {
		return err
	}
	*x = CompressType(value)
	return nil
}
func (CompressType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

var E_ServiceTimeout = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.ServiceOptions)(nil),
	ExtensionType: (*int64)(nil),
	Field:         20000,
	Name:          "sofa.pbrpc.service_timeout",
	Tag:           "varint,20000,opt,name=service_timeout,json=serviceTimeout,def=10000",
	Filename:      "sofa/pbrpc/rpc_option.proto",
}

var E_MethodTimeout = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MethodOptions)(nil),
	ExtensionType: (*int64)(nil),
	Field:         20000,
	Name:          "sofa.pbrpc.method_timeout",
	Tag:           "varint,20000,opt,name=method_timeout,json=methodTimeout",
	Filename:      "sofa/pbrpc/rpc_option.proto",
}

var E_RequestCompressType = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MethodOptions)(nil),
	ExtensionType: (*CompressType)(nil),
	Field:         20001,
	Name:          "sofa.pbrpc.request_compress_type",
	Tag:           "varint,20001,opt,name=request_compress_type,json=requestCompressType,enum=sofa.pbrpc.CompressType,def=0",
	Filename:      "sofa/pbrpc/rpc_option.proto",
}

var E_ResponseCompressType = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MethodOptions)(nil),
	ExtensionType: (*CompressType)(nil),
	Field:         20002,
	Name:          "sofa.pbrpc.response_compress_type",
	Tag:           "varint,20002,opt,name=response_compress_type,json=responseCompressType,enum=sofa.pbrpc.CompressType,def=0",
	Filename:      "sofa/pbrpc/rpc_option.proto",
}

func init() {
	proto.RegisterEnum("sofa.pbrpc.CompressType", CompressType_name, CompressType_value)
	proto.RegisterExtension(E_ServiceTimeout)
	proto.RegisterExtension(E_MethodTimeout)
	proto.RegisterExtension(E_RequestCompressType)
	proto.RegisterExtension(E_ResponseCompressType)
}

func init() { proto.RegisterFile("sofa/pbrpc/rpc_option.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 305 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0x4f, 0x4f, 0xc2, 0x40,
	0x10, 0xc5, 0xad, 0xe8, 0x65, 0xa3, 0xb0, 0x59, 0x90, 0x10, 0x4d, 0x94, 0xa3, 0xf1, 0xb0, 0xad,
	0xc6, 0x53, 0xaf, 0x1e, 0xb8, 0xf8, 0x27, 0x02, 0x27, 0x2e, 0x0d, 0x94, 0x01, 0x37, 0xa1, 0x9d,
	0x71, 0x77, 0x6b, 0x82, 0x89, 0x89, 0xf1, 0x73, 0x78, 0x50, 0x3f, 0xa9, 0xa1, 0x7f, 0xb4, 0x96,
	0x83, 0xd1, 0x63, 0xdf, 0x7b, 0xfb, 0x9b, 0x37, 0x53, 0x76, 0x60, 0x70, 0x36, 0x76, 0x69, 0xa2,
	0x29, 0x74, 0x35, 0x85, 0x01, 0x92, 0x55, 0x18, 0x4b, 0xd2, 0x68, 0x51, 0xb0, 0x95, 0x29, 0x53,
	0x73, 0xbf, 0x3b, 0x47, 0x9c, 0x2f, 0xc0, 0x4d, 0x9d, 0x49, 0x32, 0x73, 0xa7, 0x60, 0x42, 0xad,
	0xc8, 0xa2, 0xce, 0xd2, 0x27, 0x4f, 0x6c, 0xe7, 0x02, 0x23, 0xd2, 0x60, 0xcc, 0x70, 0x49, 0x20,
	0x5a, 0x8c, 0x97, 0xbf, 0xaf, 0x31, 0x06, 0xbe, 0x51, 0x55, 0x7b, 0x8f, 0x8a, 0xb8, 0x53, 0x55,
	0x47, 0x0b, 0x35, 0xe1, 0x9b, 0xa2, 0xcd, 0x44, 0x59, 0x1d, 0xc4, 0x63, 0xa2, 0x25, 0xaf, 0x89,
	0x26, 0x6b, 0x94, 0xf5, 0xcb, 0xd1, 0x39, 0xdf, 0xf2, 0x6f, 0x59, 0xc3, 0x80, 0x7e, 0x50, 0x21,
	0x04, 0x56, 0x45, 0x80, 0x89, 0x15, 0x47, 0x32, 0x2b, 0x2d, 0x8b, 0xd2, 0x72, 0x90, 0x25, 0x6e,
	0xd2, 0x2d, 0x4d, 0xe7, 0xed, 0xd5, 0xe9, 0x3a, 0xc7, 0x35, 0x7f, 0xfb, 0xd4, 0xf3, 0x3c, 0xaf,
	0x5f, 0xcf, 0x01, 0xc3, 0xec, 0xbd, 0xdf, 0x63, 0xf5, 0x08, 0xec, 0x1d, 0x4e, 0xbf, 0x88, 0x87,
	0x6b, 0xc4, 0xab, 0x34, 0x50, 0x01, 0xf6, 0x77, 0xb3, 0x77, 0x05, 0xe8, 0xd9, 0x61, 0x7b, 0x1a,
	0xee, 0x13, 0x30, 0x36, 0x08, 0xf3, 0xe6, 0x81, 0x5d, 0x1d, 0xe9, 0x37, 0xe0, 0x7b, 0x0a, 0xac,
	0x9f, 0x75, 0xe4, 0xf7, 0xbf, 0x90, 0xe5, 0xe5, 0xfd, 0xb5, 0x23, 0xf7, 0x9b, 0xf9, 0xa8, 0x1f,
	0xb1, 0x17, 0x87, 0xb5, 0x35, 0x18, 0xc2, 0xd8, 0xc0, 0x1f, 0x3b, 0x7c, 0xfc, 0xa3, 0x43, 0xab,
	0x98, 0x55, 0x76, 0x3e, 0x03, 0x00, 0x00, 0xff, 0xff, 0xd0, 0x46, 0x70, 0x1e, 0x6e, 0x02, 0x00,
	0x00,
}
